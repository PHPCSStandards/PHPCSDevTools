name: CS

on:
  # Run on all pushes and on all pull requests.
  # Prevent the build from running when there are only irrelevant changes.
  push:
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checkcs:
    name: 'Basic CS and QA checks'
    runs-on: ubuntu-latest

    env:
      XMLLINT_INDENT: '    '

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: cs2pr

      # Validate the composer.json file.
      # @link https://getcomposer.org/doc/03-cli.md#validate
      - name: Validate Composer installation
        run: composer validate --no-check-all --strict

      - name: 'Composer: adjust dependencies'
        run: |
          # The sniff stage doesn't run the unit tests, so no need for PHPUnit.
          composer remove --no-update --dev phpunit/phpunit --no-scripts --no-interaction
          # Using PHPCS `master` as an early detection system for bugs upstream.
          composer require --no-update squizlabs/php_codesniffer:"dev-master" --no-interaction

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: "ramsey/composer-install@v2"

      # @link http://xmlsoft.org/xmllint.html
      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libxml2-utils

      # Show XML violations inline in the file diff.
      # @link https://github.com/marketplace/actions/xmllint-problem-matcher
      - uses: korelstar/xmllint-problem-matcher@v1

      # Validate the XSD and XML files against schema.
      - name: Validate Docs XSD against schema
        run: xmllint --noout --schema http://www.w3.org/2001/XMLSchema.xsd DocsXsd/phpcsdocs.xsd

      - name: Validate PHPCSDebug ruleset against schema
        run: xmllint --noout --schema vendor/squizlabs/php_codesniffer/phpcs.xsd PHPCSDebug/ruleset.xml

      - name: Validate docs against schema
        run: xmllint --noout --schema DocsXsd/phpcsdocs.xsd ./PHPCSDebug/Docs/*/*Standard.xml

      # Check code-style consistency of the XSD and XML files.
      - name: Check Ruleset XML code style
        run: diff -B ./PHPCSDebug/ruleset.xml <(xmllint --format "./PHPCSDebug/ruleset.xml")

      # Check the code-style consistency of the PHP files.
      - name: Check PHP code style
        continue-on-error: true
        run: composer checkcs -- --report-full --report-checkstyle=./phpcs-report.xml

      - name: Show PHPCS results in PR
        run: cs2pr ./phpcs-report.xml
